[{"/Users/user/Documents/Code/ak/akin-appp/src/index.js":"1","/Users/user/Documents/Code/ak/akin-appp/src/App.js":"2","/Users/user/Documents/Code/ak/akin-appp/src/reportWebVitals.js":"3","/Users/user/Documents/Code/ak/akin-appp/src/Text.js":"4","/Users/user/Documents/Code/ak/akin-appp/src/VisitorLogin.js":"5","/Users/user/Documents/Code/ak/akin-appp/src/Fire.js":"6","/Users/user/Documents/Code/ak/akin-appp/src/History.js":"7","/Users/user/Documents/Code/ak/akin-appp/src/Login.js":"8","/Users/user/Documents/Code/ak/akin-appp/src/Question.js":"9","/Users/user/Documents/Code/ak/akin-appp/src/Final.js":"10","/Users/user/Documents/Code/ak/akin-appp/src/Admin.js":"11","/Users/user/Documents/Code/ak/akin-appp/src/NavBar.js":"12","/Users/user/Documents/Code/ak/akin-appp/src/Second.js":"13","/Users/user/Documents/Code/ak/akin-appp/src/HistoryHeader.js":"14","/Users/user/Documents/Code/ak/akin-appp/src/QuestionHeader.js":"15","/Users/user/Documents/Code/ak/akin-appp/src/Scrollbutton.js":"16","/Users/user/Documents/Code/ak/akin-appp/src/AdminHeader.js":"17","/Users/user/Documents/Code/ak/akin-appp/src/Data.js":"18","/Users/user/Documents/Code/ak/akin-appp/src/Loading.jsx":"19"},{"size":589,"mtime":1612173262115,"results":"20","hashOfConfig":"21"},{"size":3681,"mtime":1645899809074,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1611704926904,"results":"23","hashOfConfig":"21"},{"size":9080,"mtime":1666520701816,"results":"24","hashOfConfig":"21"},{"size":3009,"mtime":1614265112829,"results":"25","hashOfConfig":"21"},{"size":428,"mtime":1613218920746,"results":"26","hashOfConfig":"21"},{"size":2796,"mtime":1646258239756,"results":"27","hashOfConfig":"21"},{"size":4206,"mtime":1614282073461,"results":"28","hashOfConfig":"21"},{"size":8083,"mtime":1646258289435,"results":"29","hashOfConfig":"21"},{"size":3855,"mtime":1643054130964,"results":"30","hashOfConfig":"21"},{"size":16185,"mtime":1666556289672,"results":"31","hashOfConfig":"21"},{"size":1072,"mtime":1636316623735,"results":"32","hashOfConfig":"21"},{"size":926,"mtime":1666468188204,"results":"33","hashOfConfig":"21"},{"size":6104,"mtime":1646255280653,"results":"34","hashOfConfig":"21"},{"size":6099,"mtime":1646255319065,"results":"35","hashOfConfig":"21"},{"size":613,"mtime":1638493082133,"results":"36","hashOfConfig":"21"},{"size":6581,"mtime":1646257724686,"results":"37","hashOfConfig":"21"},{"size":2429995,"mtime":1626220397552,"results":"38","hashOfConfig":"21"},{"size":568,"mtime":1613835235527,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"hhfp02",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/user/Documents/Code/ak/akin-appp/src/index.js",[],["82","83"],"/Users/user/Documents/Code/ak/akin-appp/src/App.js",[],"/Users/user/Documents/Code/ak/akin-appp/src/reportWebVitals.js",[],"/Users/user/Documents/Code/ak/akin-appp/src/Text.js",["84"],"import React, { useState, useEffect } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport Icon from \"./NewTree.svg\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n// import TextHeader from \"./TextHeader\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\n// import Loader from \"./Loading\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport NavBar from \"./NavBar\";\r\n// import { Link } from \"react-router-dom\";\r\nimport firebase from \"./Fire\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Second from \"./Second\";\r\nimport Axios from \"axios\";\r\n\r\nconst move = keyframes`\r\n0% { transform: translateY(-5px)         }\r\n    50% { transform: translateY(100px) translateX(-100px)        }\r\n    100% { transform: translateY(-5px)         }\r\n`;\r\nconst TreeSvg = styled.img`\r\n display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  margin: auto;\r\n  margin-top: 10rem;\r\n  max-width: 100%;\r\n  width: calc(30% + 10vw);\r\n  height: 20rem;\r\n  z-index: 7;\r\n  animation: ${move} 2.5s ease infinite;\r\n  }\r\n`;\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\t/* position: relative; */\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tmaxWidth: 400,\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tmodal: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\tpaper: {\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tborder: \"2px solid #000\",\r\n\t\tboxShadow: theme.shadows[5],\r\n\t\tpadding: theme.spacing(2, 4, 3),\r\n\t},\r\n}));\r\n// const Questions = [\r\n//   \"Does it have leaves?\",\r\n//   \"Are the leaves broad?\",\r\n//   \"is the leaf green?\",\r\n//   \"is it tall\",\r\n// ];\r\nexport default function Text() {\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\tconst [activeStep, setActiveStep] = React.useState(0);\r\n\tconst [data, setData] = useState([]);\r\n\tconst [questdata, setQuestdata] = useState([]);\r\n\tconst [open, setOpen] = React.useState(false);\r\n\tconst [value, setValue] = React.useState(\"1\");\r\n\tconst [binary, setBinary] = React.useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\r\n\tconst handleOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t// const db = firebase.firestore();\r\n\t\t// let newdata = [];\r\n\t\t// db.collection(\"answers\")\r\n\t\t//   .get()\r\n\t\t//   .then((querySnapshot) => {\r\n\t\t//     querySnapshot.forEach((doc) => newdata.push(doc.data()));\r\n\t\t//     setData(newdata);\r\n\t\t//   });\r\n\t\tAxios.get(\"http://localhost:3001/getData\", {\r\n\t\t\tparams: { limit: 10 },\r\n\t\t}).then((response) => {\r\n\t\t\tsetData(response.data);\r\n\t\t\tconsole.log(response.data);\r\n\t\t\tsetIsLoading(false);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst db = firebase.firestore();\r\n\t\tdb.collection(\"questions\")\r\n\t\t\t.get()\r\n\t\t\t.then((querySnapshot) => {\r\n\t\t\t\tconst fetchedData = [];\r\n\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\tconst data = doc.data();\r\n\t\t\t\t\tfetchedData.push(data);\r\n\t\t\t\t});\r\n\t\t\t\tsetQuestdata(fetchedData);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t});\r\n\t}, []);\r\n\tuseEffect(() => {\r\n\t\tif (questdata.length > 0 && data.length > 0) setIsLoading(false);\r\n\t}, [data.length, questdata.length]);\r\n\r\n\tconst handleNext = () => {\r\n\t\tsetBinary([...binary, value]);\r\n\t\tsetActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n\t\tsetValue(\"\");\r\n\t\t// console.log(activeStep);\r\n\t\tif (newquest.length === activeStep) {\r\n\t\t\tfilterAnswersToShow();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleBack = () => {\r\n\t\tconst lastItemRemoved = binary.pop();\r\n\t\tsetBinary(binary);\r\n\t\tsetActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\t\t// console.log(lastItemRemoved);\r\n\t};\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value);\r\n\t};\r\n\r\n\t// kpk\r\n\r\n\tconst tree = data;\r\n\t// const newTree = tree.map((trees) => trees.code);\r\n\tconst filteredCode = tree.filter((tre) => {\r\n\t\treturn tre.code.indexOf(binary.join()) !== -1;\r\n\t});\r\n\tconsole.log(filteredCode, \"filteredcode\", tree);\r\n\tconst filterAnswersToShow = () => {\r\n\t\t// const db = firebase.firestore();\r\n\t\t// db.collection(\"answers\")\r\n\t\t//   .where(\"code\", \"==\", binary.join())\r\n\t\t//   .get()\r\n\t\t//   .then((querySnapshot) => {\r\n\t\t//     console.log(querySnapshot.docs.map((v) => v.data()));\r\n\t\t//   });\r\n\t\tAxios.get(\"http://localhost:3001/getfilter\", {\r\n\t\t\tcodex: binary.join(),\r\n\t\t}).then((response) => console.log(response));\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\t// useEffect(() => {\r\n\t// }, []);\r\n\tconsole.log(binary.join());\r\n\r\n\t// const getCode = (code) => {\r\n\t//   const index = tree.find((item) => item.code === code);\r\n\r\n\t//   return index.code;\r\n\t// };\r\n\tconst newquest = questdata.map((da) => da);\r\n\tconst newValue = [newquest[activeStep]];\r\n\tconst num = [\r\n\t\t\"1\",\r\n\t\t\"2\",\r\n\t\t\"3\",\r\n\t\t\"4\",\r\n\t\t\"5\",\r\n\t\t\"6\",\r\n\t\t\"7\",\r\n\t\t\"8\",\r\n\t\t\"9\",\r\n\t\t\"10\",\r\n\t\t\"11\",\r\n\t\t\"12\",\r\n\t\t\"13\",\r\n\t\t\"14\",\r\n\t\t\"15\",\r\n\t\t\"16\",\r\n\t];\r\n\tconst arrangedNum = [num[activeStep]];\r\n\t// const number = questdata.map((da) => da.number);\r\n\r\n\tconsole.log(filteredCode);\r\n\t// console.log(isLoading);\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<NavBar />\r\n\t\t\t{isLoading === true ? (\r\n\t\t\t\t<TreeSvg src={Icon} alt=\"tree Svg\" srcset=\"\" width=\"400\" height=\"400\" />\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t{newquest.length === activeStep ? (\r\n\t\t\t\t\t\t<Second filteredCode={filteredCode} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t{newValue.map((i) => (\r\n\t\t\t\t\t\t\t\t<div key={i}>\r\n\t\t\t\t\t\t\t\t\t<h3 className=\"card-title\" style={{ marginTop: \"30px\" }}>\r\n\t\t\t\t\t\t\t\t\t\t{arrangedNum.map((num) => num)}. {i.Question}\r\n\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleOpen}\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-label=\"info icon\"\r\n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"span\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<InfoIcon />\r\n\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\t\t\t\taria-labelledby=\"transition-modal-title\"\r\n\t\t\t\t\t\t\t\t\t\taria-describedby=\"transition-modal-description\"\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.modal}\r\n\t\t\t\t\t\t\t\t\t\topen={open}\r\n\t\t\t\t\t\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\t\t\t\t\t\tcloseAfterTransition\r\n\t\t\t\t\t\t\t\t\t\tBackdropComponent={Backdrop}\r\n\t\t\t\t\t\t\t\t\t\tBackdropProps={{\r\n\t\t\t\t\t\t\t\t\t\t\ttimeout: 500,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Fade in={open}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.paper}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"transition-modal-title\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={i.image}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\talt={i.number}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: \"10rem\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: \"15rem\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginBottom: \"10px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h2 id=\"transition-modal-title\">Transition modal</h2> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p id=\"transition-modal-description\">{i.Description}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t\t\t\t\t\t{/* <FormLabel component=\"legend\">Questions</FormLabel> */}\r\n\t\t\t\t\t\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\t\t\t\t\t\taria-label=\"gender\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"gender1\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"1\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Yes\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ paddingTop: \"20px\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"No\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ paddingTop: \"20px\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t<MobileStepper\r\n\t\t\t\t\t\t\t\tstyle={{ marginTop: \"30px\" }}\r\n\t\t\t\t\t\t\t\tvariant=\"progress\"\r\n\t\t\t\t\t\t\t\tsteps={newquest.length}\r\n\t\t\t\t\t\t\t\tposition=\"static\"\r\n\t\t\t\t\t\t\t\tactiveStep={activeStep}\r\n\t\t\t\t\t\t\t\tclassName={classes.root}\r\n\t\t\t\t\t\t\t\tnextButton={\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"10rem\" }}\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleNext}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={activeStep === newquest.length || value === \"\"}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t\t\t\t{theme.direction === \"rtl\" ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<KeyboardArrowLeft />\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<KeyboardArrowRight />\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbackButton={\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"10rem\" }}\r\n\t\t\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleBack}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={activeStep === 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{theme.direction === \"rtl\" ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<KeyboardArrowRight />\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<KeyboardArrowLeft />\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n}\r\n","/Users/user/Documents/Code/ak/akin-appp/src/VisitorLogin.js",[],"/Users/user/Documents/Code/ak/akin-appp/src/Fire.js",[],"/Users/user/Documents/Code/ak/akin-appp/src/History.js",["85"],"import React, { useEffect, useState } from \"react\";\r\nimport HistoryHeader from \"./HistoryHeader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport firebase from \"./Fire\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: \"130vh\",\r\n    flexGrow: 1,\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst History = (handleLogout) => {\r\n  const classes = useStyles();\r\n  // const theme = useTheme();\r\n  const [history, setHistory] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  useEffect(() => {\r\n    const db = firebase.firestore();\r\n    db.collection(\"visitors\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const fetchedData = [];\r\n        querySnapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          fetchedData.push(data);\r\n        });\r\n        setHistory(fetchedData);\r\n      });\r\n  }, []);\r\n  const handleDelete = () => {\r\n    const db = firebase.firestore();\r\n    db.collection(\"visitors\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          doc.ref.delete();\r\n        });\r\n      })\r\n      .catch((error) => console.error(\"error in removing :\", error));\r\n    setOpen(true);\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <HistoryHeader />\r\n      {history.map((i) => (\r\n        <div\r\n          key={i.Email}\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            textAlign: \"center\",\r\n            justifyItems: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              marginBottom: \"30px\",\r\n            }}\r\n          >\r\n            <h3>Email: {i.Email}</h3> <h3>Name: {i.Name}</h3>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          margin: \"10px 10px\",\r\n        }}\r\n      >\r\n        <button\r\n          style={{\r\n            width: \"20rem\",\r\n            borderRadius: \"10px\",\r\n          }}\r\n          onClick={handleDelete}\r\n        >\r\n          Delete\r\n        </button>\r\n        <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"success\">\r\n            Your history has been cleared successfully\r\n          </Alert>\r\n        </Snackbar>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","/Users/user/Documents/Code/ak/akin-appp/src/Login.js",[],"/Users/user/Documents/Code/ak/akin-appp/src/Question.js",["86","87"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport firebase from \"./Fire\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n// import Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Loader from \"./Loading\";\r\nimport Icon from \"./tree.svg\";\r\nimport QuestionHeader from \"./QuestionHeader\"\r\nimport Button from \"@material-ui/core/Button\";\r\n// import Axios from \"axios\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  header: {\r\n    minWidth: \"130vh\",\r\n    flexGrow: 1,\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    marginTop: \"2rem\",\r\n  },\r\n}));\r\nconst Question = ({ handleLogout }) => {\r\n  // const codex = [\r\n  //   \"1\",\r\n  //   \"2\",\r\n  //   \"3\",\r\n  //   \"4\",\r\n  //   \"5\",\r\n  //   \"6\",\r\n  //   \"7\",\r\n  //   \"8\",\r\n  //   \"9\",\r\n  //   \"10\",\r\n  //   \"11\",\r\n  //   \"12\",\r\n  //   \"13\",\r\n  //   \"14\",\r\n  //   \"15\",\r\n  //   \"16\",\r\n  // ];\r\n  // const code = codex.sort((a, b) => a - b);\r\n  // const defaultOutcomeDetails = {\r\n  //   Question: \"\",\r\n  //   Description: \"\",\r\n  //   image: \"\",\r\n  // };\r\n  const [quest, setQuest] = useState([]);\r\n  // code.map((x, i) => ({\r\n  //   number: x,\r\n  //   ...defaultOutcomeDetails,\r\n  // }))\r\n  const [image, setImage] = useState(null);\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  // console.log(quest);\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"questions\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        const fetchedData = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setQuest(fetchedData);\r\n        console.log(fetchedData);\r\n      });\r\n  }, []);\r\n  const handleChange = (num, value) => {\r\n    const newNub = [...quest];\r\n    const newQuest = newNub.map((questValue) => {\r\n      if (num === questValue.number) {\r\n        return { ...questValue, Question: value };\r\n      }\r\n      return questValue;\r\n    });\r\n    setQuest(newQuest);\r\n  };\r\n  const handleChange2 = (num, value) => {\r\n    const newNub = [...quest];\r\n    const newQuest = newNub.map((questValue) => {\r\n      if (num === questValue.number) {\r\n        return { ...questValue, Description: value };\r\n      }\r\n      return questValue;\r\n    });\r\n    setQuest(newQuest);\r\n  };\r\n  const handleSave = () => {\r\n    const db = firebase.firestore();\r\n    quest.forEach((val) => {\r\n      db.collection(\"questions\").doc(val.number).update(val);\r\n    });\r\n    setOpen(true);\r\n  };\r\n  const handleImageChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n  const upload = (num) => {\r\n    const ref = firebase.storage().ref(`images/${image.name}`).put(image);\r\n    ref.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        const progress = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        setProgress(progress);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        firebase\r\n          .storage()\r\n          .ref(\"images\")\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            alert(\"image uploaded\");\r\n            const newNub = [...quest];\r\n            const newQuest = newNub.map((questValue) => {\r\n              if (num === questValue.number) {\r\n                return { ...questValue, image: url };\r\n              }\r\n              return questValue;\r\n            });\r\n            setQuest(newQuest);\r\n          });\r\n      }\r\n    );\r\n  };\r\n  // useEffect = (() => {\r\n  //   Axios.get(\"http://localhost:3001/getfilter\").then((response) =>  )\r\n  // },[])\r\n\r\n  // useEffect(() => {\r\n  //   quest.forEach((element) => {\r\n  //     firebase\r\n  //       .firestore()\r\n  //       .collection(\"questions\")\r\n  //       .doc(element.number)\r\n  //       .set(element);\r\n  //   });\r\n  // }, []);\r\n  console.log(quest);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 2500);\r\n  }, []);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <section className=\"hero\">\r\n       <QuestionHeader/>\r\n\r\n      <div className={classes.header}>\r\n        {isLoading === true ? (\r\n          <Loader />\r\n        ) : (\r\n          <>\r\n            {quest.map((co, i) => (\r\n              <>\r\n                <Grid container>\r\n                  <Grid item xs={4}>\r\n                    <div style={{ marginLeft: \"5rem\" }}>\r\n                      <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Question\"\r\n                        multiline\r\n                        rowsMax={4}\r\n                        value={co.Question}\r\n                        color=\"primary\"\r\n                        onChange={(e) =>\r\n                          handleChange(co.number, e.target.value)\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <div style={{ marginLeft: \"10rem\" }}>\r\n                      <TextField\r\n                        id=\"standard-multiline-static\"\r\n                        label=\"Description\"\r\n                        multiline\r\n                        rows={4}\r\n                        color=\"primary\"\r\n                        value={co.Description}\r\n                        onChange={(e) =>\r\n                          handleChange2(co.number, e.target.value)\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                      <input\r\n                        accept=\"image/*\"\r\n                        className={classes.input}\r\n                        id=\"photo\"\r\n                        multiple\r\n                        type=\"file\"\r\n                        onChange={handleImageChange}\r\n                      />\r\n                      {co.image !== \"\" ? (\r\n                        <progress value={progress} max=\"100\" />\r\n                      ) : null}\r\n\r\n                      <label htmlFor=\"contained-button-file\">\r\n                        <Button\r\n                          style={{ fontSize: \"1rem\" }}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => upload(co.number)}\r\n                          component=\"span\"\r\n                        >\r\n                          Upload\r\n                        </Button>\r\n                      </label>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </>\r\n            ))}\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <button\r\n                style={{\r\n                  width: \"20rem\",\r\n                  borderRadius: \"10px\",\r\n                }}\r\n                onClick={handleSave}\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"success\">\r\n                The Questions has been updated successfully\r\n              </Alert>\r\n            </Snackbar>\r\n          </>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","/Users/user/Documents/Code/ak/akin-appp/src/Final.js",[],"/Users/user/Documents/Code/ak/akin-appp/src/Admin.js",["88","89","90","91"],"/Users/user/Documents/Code/ak/akin-appp/src/NavBar.js",[],"/Users/user/Documents/Code/ak/akin-appp/src/Second.js",[],"/Users/user/Documents/Code/ak/akin-appp/src/HistoryHeader.js",[],"/Users/user/Documents/Code/ak/akin-appp/src/QuestionHeader.js",[],"/Users/user/Documents/Code/ak/akin-appp/src/Scrollbutton.js",[],"/Users/user/Documents/Code/ak/akin-appp/src/AdminHeader.js",[],"/Users/user/Documents/Code/ak/akin-appp/src/Data.js",[],"/Users/user/Documents/Code/ak/akin-appp/src/Loading.jsx",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":143,"column":9,"nodeType":"98","messageId":"99","endLine":143,"endColumn":24},{"ruleId":"96","severity":1,"message":"100","line":20,"column":9,"nodeType":"98","messageId":"99","endLine":20,"endColumn":16},{"ruleId":"96","severity":1,"message":"101","line":7,"column":10,"nodeType":"98","messageId":"99","endLine":7,"endColumn":14},{"ruleId":"96","severity":1,"message":"102","line":11,"column":8,"nodeType":"98","messageId":"99","endLine":11,"endColumn":12},{"ruleId":"96","severity":1,"message":"103","line":2,"column":8,"nodeType":"98","messageId":"99","endLine":2,"endColumn":12},{"ruleId":"96","severity":1,"message":"104","line":34,"column":9,"nodeType":"98","messageId":"99","endLine":34,"endColumn":14},{"ruleId":"96","severity":1,"message":"105","line":86,"column":17,"nodeType":"98","messageId":"99","endLine":86,"endColumn":26},{"ruleId":"106","severity":1,"message":"107","line":250,"column":24,"nodeType":"108","messageId":"109","endLine":250,"endColumn":26},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'lastItemRemoved' is assigned a value but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","'Link' is defined but never used.","'Icon' is defined but never used.","'Data' is defined but never used.","'image' is assigned a value but never used.","'setSearch' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]